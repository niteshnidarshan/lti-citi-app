import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';
import { MessageDialogService } from 'src/app/services/dialog/message-dialog.service';
import { AccountService } from 'src/app/services/account.service';
import { TransactionModel } from 'src/app/model/TransactionModel';

@Component({
  selector: 'app-transfer',
  templateUrl: './transfer.component.html',
  styleUrls: ['./transfer.component.css']
})
export class TransferComponent implements OnInit {

  transferForm: FormGroup; 
  transferGreetings: any; 
  user: any;
  accounts: any;
  transferData: any;

  constructor(private formBuilder: FormBuilder, private dialogService: MessageDialogService, private accountService: AccountService) { 

   this.loadAccounts();
   this.validateForm();

  }

  ngOnInit(): void {
  }

  loadAccounts(){
    let userId: string = sessionStorage.getItem("userId"); 
    this.accountService.getAccountsOfUser(userId).subscribe(
      (success) =>{
        this.accounts = success; 
      },
      (err) => {
        alert(err.error.message);
      }
    );
  }

  validateForm(){
    this.transferForm = this.formBuilder.group({
      "senderAccountId": new FormControl('',Validators.required),
      "receiversAccountId": new FormControl('',Validators.required), 
      "amount": new FormControl('', [Validators.required]), 
    });
  }

  doTransfer(){
    let transaction: TransactionModel = new TransactionModel(
      
        "", //Will be generated by server
        "DIGITAL",
        this.transferForm.controls['senderAccountId'].value,
        this.transferForm.controls['receiversAccountId'].value,
        this.transferForm.controls['amount'].value,
        sessionStorage.getItem("userId"),
        null,
        ""
    );

    this.accountService.doTransfer(transaction).subscribe(
      (success) => {
        this.transferData = success; 
        let options = {
          title: 'Transfer Money',
          message1: "Success!",
          message2: "Transaction Id : "+this.transferData.transactionId,
          cancelText: 'Ok',
          confirmText: 'Ok'
        };
  
        this.dialogService.open(options);
        
        this.dialogService.confirmed().subscribe(confirmed => {
          if (confirmed) {
              //alert("Jai Ram G ki");
              //After clicking Ok on message dialog, form should reset
              this.transferForm.reset();
            }
          });
      },
      (err) => {
        let options = {
          title: 'Transaction - error',
          message1: err.error.message,
          message2: "",
          cancelText: 'Ok',
          confirmText: 'Ok'
        };
        this.dialogService.open(options);
      }
    );

  }


}
